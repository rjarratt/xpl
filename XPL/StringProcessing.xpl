*SEGMENT 1
BEGIN

V32/0 BASE:0
V64/NB DESTINATION:3
V64/NB SOURCE:0
V64/NB HELLO.STR:1
V64/NB WORLD.STR:2
V64/NB DIGITS.STR:4
V64/NB LET.THERE.BE.LIGHT.STR:5
V64/NB LIGHT.STR:6

NB = BASE
D = DESTINATION
XD = SOURCE
    CALL PRINT.STRING(L1, SOURCE)
    L1:CALL PRINT.STRING(L2, NEWLINE)
    L2:
SMVB +32
    CALL PRINT.STRING(L3,DESTINATION)
    L3:CALL PRINT.STRING(L4, NEWLINE)
    L4:
XD = HELLO.STR
    CALL PRINT.STRING(L5,HELLO.STR)
    L5:CALL PRINT.STRING(L6, NEWLINE)
    L6:
SMVE +32 :: Not a real order in MU5, included because it is in HASE
    CALL PRINT.STRING(L7,DESTINATION)
    L7:CALL PRINT.STRING(L8,NEWLINE)
	L8:
BMVB +32
    CALL PRINT.STRING(L9,DESTINATION)
    L9:CALL PRINT.STRING(L10,NEWLINE)
	L10:
XD = WORLD.STR
    CALL PRINT.STRING(L11,WORLD.STR)
    L11:CALL PRINT.STRING(L12,NEWLINE)
	L12:
SMVE +34
    CALL PRINT.STRING(L13,DESTINATION)
    L13:CALL PRINT.STRING(L14,NEWLINE)
	L14:
XD = SOURCE
SMVF +32
    CALL PRINT.STRING(L15,DESTINATION)
    L15:CALL PRINT.STRING(L16,NEWLINE)
	L16:
D = DESTINATION
BSCN +104
BMVB +72
    CALL PRINT.STRING(L17,DESTINATION)
    L17:CALL PRINT.STRING(L18,NEWLINE)
	L18:
D = DIGITS.STR
    CALL PRINT.STRING(L19,DIGITS.STR)
    L19:CALL PRINT.STRING(L20,NEWLINE)
	L20:
BCMP +48
    CALL PRINT.STRING(L21,D)
    L21:CALL PRINT.STRING(L22,NEWLINE)
	L22:
B = D[0]
B = 0
XD = LET.THERE.BE.LIGHT.STR
    CALL PRINT.STRING(L23,LET.THERE.BE.LIGHT.STR)
    L23:CALL PRINT.STRING(L24,NEWLINE)
	L24:
D = LIGHT.STR
    CALL PRINT.STRING(L25,LIGHT.STR)
    L25:CALL PRINT.STRING(L26,NEWLINE)
	L26:
LOOP: SCMP +46
IF =0, - -> STOP
BSCN +95
MOD 1
    CALL PRINT.STRING(L27,D)
    L27:CALL PRINT.STRING(L28,NEWLINE)
	L28:
XD = LET.THERE.BE.LIGHT.STR
B + 1
- -> LOOP
STOP: - -> STOP

:: Parameter is descriptor for string to be printed.
PROC PRINT.STRING
V64/NB STRING:1
V32/NB LENGTH:4
VV/0 CONSOLE.INTERRUPT:%300
VV/0 TELETYPE.DATA:%306
VV/0 TELETYPE.CONTROL:%307
V32/STK STACK.TOP:0

NB =SF+ - 2 :: Go back 2 for each parameter
SF + 1

STACK B
STACK D
STACK A

:: Extract length of string              
A =' STRING
AU <= -32
AU & %FFFFFF
A => LENGTH

B = 0
D = STRING
NEXTCHAR:
B COMP LENGTH
IF >=0, - -> DONE
A =' %F             :: Value that resets console interrupt bits
A => CONSOLE.INTERRUPT        :: Set Console Interrupt in Console V-Store
A =' %00                      :: TTY output mode
A => TELETYPE.CONTROL         :: Set teletype control
A =' D[B]                     :: Next character
A => TELETYPE.DATA            :: Set teletype data

POLL: A =' CONSOLE.INTERRUPT  :: Read Console Interrupt
AU COMP 0                     :: Poll for interrupt
IF =0, - -> POLL
B + 1
- -> NEXTCHAR

DONE:
A = STACK.TOP
D = STACK.TOP
B = STACK.TOP

RETURN
END
DATASTR NEWLINE "|0D||0A|"
END
*END OF SEGMENT
*SEGMENT 0
BEGIN
DATAVEC DATA(32)
16,64
0,0
0,0
0,0
0,0
0,0
0,0
0,0
1476395009,786432
1476395013,786440
1476395013,786448
1476395024,786464
1476395024,786488
1476395013,786504
1476395027,786512
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
END
END
*END OF SEGMENT
*SEGMENT 3
BEGIN
DATASTR ALL.STRINGS "|22|-------hello---world-----------------------------------00083576--------light---Let_there_be_light.-----------------------------------------------------------------------------"
END
*END OF SEGMENT
